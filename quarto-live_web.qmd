---
title: "Quarto-live_website"
format: live-html
engine: knitr
---

{{< include ./_extensions/r-wasm/live/_knitr.qmd >}}
{{< include ./_extensions/r-wasm/live/_gradethis.qmd >}}

``` bash
$ quarto add r-wasm/quarto-live
```

```{webr}
for (x in 1:5) {
  print(x ** 2)
}
```

## Read Only

```{webr}
#| edit: false
df <- data.frame(foo = c(1, 2, 3), bar = c(10, 20, 30))
df$foo
df$bar
```

## Read Only without autorun

```{webr}
#| autorun: false
123 + 456
```

## **Immediate execution**

Setting `runbutton: false` will remove the “Run Code” button from the
editor UI. In this mode code is evaluated immediately as it is entered
into the editor.

#### Source

```{webr}
#| caption: Immediate Execution
#| runbutton: false
foo <- 123
bar <- 246
foo + bar
```

## Autocomplete

Autocompletion code suggestions can be enabled with the code cell option
completion: true.

#### Source

for example, type `rnorm(10, n_mean, n_sd)` below also

```{webr}
#| completion: true
n_mean <- 120
n_sd <- 5

# Type "r" to see context aware suggestions and click on `rnorm`
```

## Persistent Storage in browser

```{webr}
#| persist: true
StudentNumber <- 33412345
StudentNumber
```

## Fill in the blank so that the result of the sum is 10.

```{webr}
#| exercise: ex_1
1 + 2 + 3 + ______
```

```{webr}
#| setup: true
#| exercise: ex_2
foo <- 1
bar <- 2
baz <- 3
```

```{webr}
#| exercise: ex_2
foo + bar + baz + ______
```

Filter the `starwars` dataset so that only the droid characters are
included.

```{webr}
#| setup: true
#| exercise: ex_3
library(dplyr)
```

```{webr}
#| exercise: ex_3
starwars |> ______
```

::: {.hint exercise="ex_3"}
::: {.callout-note collapse="false"}
## Hint 1

Consider using the `filter()` function from `dplyr`.

``` r
starwars |> filter(______)
```
:::
:::

::: {.hint exercise="ex_3"}
::: {.callout-note collapse="false"}
## Hint 2

You should filter the dataset using the `species` column.

``` r
starwars |> filter(species == ______)
```
:::
:::

::: {.solution exercise="ex_3"}
::: {.callout-tip collapse="false"}
## Fully worked solution:

Use the `filter()` function from `dplyr`:

``` r
starwars |>                                 #<1>
    filter(species == "Droid")              #<2>
```

1.  Take the `starwars` dataset, and then,
2.  Filter for the "Droid" species.
:::
:::
